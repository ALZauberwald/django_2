"""
Django settings for disquaire_project project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
import dj_database_url

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'nj72uxffb8npmta#dg%ybh5'

# SECURITY WARNING: don't run with debug turned on in production!
# conditionnement de DEBUG en fonction de l'environnement ( ca evite de changer sa valeur a chaque fois)
if os.environ.get('ENV')=='PRODUCTION':
    DEBUG = False
else :
    DEBUG = True

# pour heroku, ALLOWED_HOSTS doit être sous la forme : 'nomdelapp.herokuapp.com'
# en local : '127.0.0.1'
ALLOWED_HOSTS = ['disquairedjango22.herokuapp.com']



# Application definition

INSTALLED_APPS = [
    'store.apps.StoreConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'disquaire_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'disquaire_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'disquaire',
        'USER': 'postgres',
        'PASSWORD': 'cameleon1A',
        'HOST': '',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Necessaire pour django debug toolbar (app tierce)
INTERNAL_IPS = [

    '127.0.0.1',

]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if os.environ.get('ENV')=='PRODUCTION':
    # préparation avant envoie sur heroku
    # gestion des fichiers static
    PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))  # nous sommes a la racine du projet
    STATIC_ROOT = os.path.join(PROJECT_ROOT,
                               'staticfiles')  # le fichier static devra etre staticfiles (il sera généré automatiquement par DJANGO)
    STATICFILES_DIRS = (os.path.join(PROJECT_ROOT, 'static'),)  # le repertoire qui contiendra staticfiles est static
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'  # on specifie que nos fichiers static doivent etre servis par whitenoise
    # gestion des bdd
    # (heroku cré une nouvelle base de donnée et une nouvelle variable d'environnement qui contient le chemin vers la nouvelle bdd)
    db_from_env = dj_database_url.config(conn_max_age=500) #on configure le nouveau chemin vers la bdd a partir dela variable d'environnement généré par heroku grace a la bibliotheque dj-database-url
    DATABASES['default'].update(db_from_env)  # maj des variables de la bdd pour passr la variable db_from_env